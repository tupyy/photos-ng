// Package v1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1

import (
	openapi_types "github.com/oapi-codegen/runtime/types"
)

// Defines values for ListMediaParamsType.
const (
	Photo ListMediaParamsType = "photo"
	Video ListMediaParamsType = "video"
)

// Defines values for ListMediaParamsSortBy.
const (
	CapturedAt ListMediaParamsSortBy = "capturedAt"
	Filename   ListMediaParamsSortBy = "filename"
	Type       ListMediaParamsSortBy = "type"
)

// Defines values for ListMediaParamsSortOrder.
const (
	Asc  ListMediaParamsSortOrder = "asc"
	Desc ListMediaParamsSortOrder = "desc"
)

// Album defines model for Album.
type Album struct {
	Children *[]struct {
		Href string `json:"href"`
		Name string `json:"name"`
	} `json:"children,omitempty"`
	Description *string `json:"description,omitempty"`
	Href        string  `json:"href"`

	// Id Unique identifier for the album
	Id string `json:"id"`

	// Media list of media href
	Media *[]string `json:"media,omitempty"`

	// Name name of the album
	Name string `json:"name"`

	// ParentHref href of the parent
	ParentHref *string `json:"parentHref,omitempty"`

	// Path path of the folder on disk
	Path string `json:"path"`
}

// Bucket defines model for Bucket.
type Bucket struct {
	// Media list of media hrefs in this bucket
	Media *[]string `json:"media,omitempty"`
	Month *int      `json:"month,omitempty"`
	Year  *int      `json:"year,omitempty"`
}

// CreateAlbumRequest defines model for CreateAlbumRequest.
type CreateAlbumRequest struct {
	// Name Name of the album
	Name string `json:"name"`

	// ParentId Id of the parent
	ParentId *string `json:"parentId,omitempty"`
}

// Error defines model for Error.
type Error struct {
	// Code Error code
	Code *string `json:"code,omitempty"`

	// Details Additional error details
	Details *map[string]interface{} `json:"details,omitempty"`

	// Message Error message
	Message string `json:"message"`
}

// ExifHeader defines model for ExifHeader.
type ExifHeader struct {
	Key   string `json:"key"`
	Value string `json:"value"`
}

// GetTimelineResponse defines model for GetTimelineResponse.
type GetTimelineResponse struct {
	Buckets []Bucket `json:"buckets"`

	// Limit Number of buckets returned
	Limit int `json:"limit"`

	// Offset Number of buckets skipped
	Offset int `json:"offset"`

	// Total Total number of buckets
	Total int `json:"total"`

	// Years List of all years that contain photos
	Years []int `json:"years"`
}

// ListAlbumsResponse defines model for ListAlbumsResponse.
type ListAlbumsResponse struct {
	Albums []Album `json:"albums"`

	// Limit Number of albums returned
	Limit int `json:"limit"`

	// Offset Number of albums skipped
	Offset int `json:"offset"`

	// Total Total number of albums
	Total int `json:"total"`
}

// ListMediaResponse defines model for ListMediaResponse.
type ListMediaResponse struct {
	// Limit Number of media items returned
	Limit int     `json:"limit"`
	Media []Media `json:"media"`

	// Offset Number of media items skipped
	Offset int `json:"offset"`

	// Total Total number of media items
	Total int `json:"total"`
}

// Media defines model for Media.
type Media struct {
	AlbumHref  string             `json:"albumHref"`
	CapturedAt openapi_types.Date `json:"capturedAt"`

	// Content href of the endpoint serving the content of the media
	Content string       `json:"content"`
	Exif    []ExifHeader `json:"exif"`

	// Filename full path of the media file on the disk
	Filename string `json:"filename"`
	Href     string `json:"href"`
	Id       string `json:"id"`

	// Thumbnail href to thumbnail
	Thumbnail string `json:"thumbnail"`
	Type      string `json:"type"`
}

// SyncAlbumResponse defines model for SyncAlbumResponse.
type SyncAlbumResponse struct {
	// Message Sync completion message
	Message string `json:"message"`

	// SyncedItems Number of items synced
	SyncedItems int `json:"synced_items"`
}

// UpdateAlbumRequest Request body for updating an album
type UpdateAlbumRequest struct {
	Description *string `json:"description,omitempty"`
	Name        *string `json:"name,omitempty"`
}

// UpdateMediaRequest defines model for UpdateMediaRequest.
type UpdateMediaRequest struct {
	// CapturedAt Date when the media was captured
	CapturedAt *openapi_types.Date `json:"capturedAt,omitempty"`

	// Exif EXIF data for the media
	Exif *[]ExifHeader `json:"exif,omitempty"`
}

// BadRequest defines model for BadRequest.
type BadRequest = Error

// InternalServerError defines model for InternalServerError.
type InternalServerError = Error

// NotFound defines model for NotFound.
type NotFound = Error

// ListAlbumsParams defines parameters for ListAlbums.
type ListAlbumsParams struct {
	// Limit Maximum number of albums to return
	Limit *int `form:"limit,omitempty" json:"limit,omitempty"`

	// Offset Number of albums to skip
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`
}

// ListMediaParams defines parameters for ListMedia.
type ListMediaParams struct {
	// Limit Maximum number of media items to return
	Limit *int `form:"limit,omitempty" json:"limit,omitempty"`

	// Offset Number of media items to skip
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`

	// AlbumId Filter media by album ID
	AlbumId *string `form:"album_id,omitempty" json:"album_id,omitempty"`

	// Type Filter media by type
	Type *ListMediaParamsType `form:"type,omitempty" json:"type,omitempty"`

	// StartDate Filter media captured on or after this date
	StartDate *openapi_types.Date `form:"startDate,omitempty" json:"startDate,omitempty"`

	// EndDate Filter media captured on or before this date
	EndDate *openapi_types.Date `form:"endDate,omitempty" json:"endDate,omitempty"`

	// SortBy Sort media by field
	SortBy *ListMediaParamsSortBy `form:"sortBy,omitempty" json:"sortBy,omitempty"`

	// SortOrder Sort order
	SortOrder *ListMediaParamsSortOrder `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
}

// ListMediaParamsType defines parameters for ListMedia.
type ListMediaParamsType string

// ListMediaParamsSortBy defines parameters for ListMedia.
type ListMediaParamsSortBy string

// ListMediaParamsSortOrder defines parameters for ListMedia.
type ListMediaParamsSortOrder string

// GetTimelineParams defines parameters for GetTimeline.
type GetTimelineParams struct {
	// StartDate Start date for the timeline
	StartDate openapi_types.Date `form:"startDate" json:"startDate"`

	// Limit Maximum number of buckets to return
	Limit *int `form:"limit,omitempty" json:"limit,omitempty"`

	// Offset Number of buckets to skip
	Offset *int `form:"offset,omitempty" json:"offset,omitempty"`
}

// CreateAlbumJSONRequestBody defines body for CreateAlbum for application/json ContentType.
type CreateAlbumJSONRequestBody = CreateAlbumRequest

// UpdateAlbumJSONRequestBody defines body for UpdateAlbum for application/json ContentType.
type UpdateAlbumJSONRequestBody = UpdateAlbumRequest

// UpdateMediaJSONRequestBody defines body for UpdateMedia for application/json ContentType.
type UpdateMediaJSONRequestBody = UpdateMediaRequest
