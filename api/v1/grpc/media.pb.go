// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: media.proto

package grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Media message representing a media entity
type Media struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                           // Unique identifier for the media
	AlbumId       string                 `protobuf:"bytes,2,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`                  // Reference to the containing album
	CapturedAt    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=captured_at,json=capturedAt,proto3" json:"captured_at,omitempty"`         // When the media was captured
	Type          MediaType              `protobuf:"varint,4,opt,name=type,proto3,enum=photos_ng.api.v1.grpc.MediaType" json:"type,omitempty"` // Type of media (photo/video)
	Filename      string                 `protobuf:"bytes,5,opt,name=filename,proto3" json:"filename,omitempty"`                               // Full path of the media file on disk
	Exif          []*ExifHeader          `protobuf:"bytes,6,rep,name=exif,proto3" json:"exif,omitempty"`                                       // EXIF metadata
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Media) Reset() {
	*x = Media{}
	mi := &file_media_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Media) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Media) ProtoMessage() {}

func (x *Media) ProtoReflect() protoreflect.Message {
	mi := &file_media_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Media.ProtoReflect.Descriptor instead.
func (*Media) Descriptor() ([]byte, []int) {
	return file_media_proto_rawDescGZIP(), []int{0}
}

func (x *Media) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Media) GetAlbumId() string {
	if x != nil {
		return x.AlbumId
	}
	return ""
}

func (x *Media) GetCapturedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CapturedAt
	}
	return nil
}

func (x *Media) GetType() MediaType {
	if x != nil {
		return x.Type
	}
	return MediaType_MEDIA_TYPE_UNSPECIFIED
}

func (x *Media) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *Media) GetExif() []*ExifHeader {
	if x != nil {
		return x.Exif
	}
	return nil
}

// Request to list media with filtering and pagination
type ListMediaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pagination    *PaginationRequest     `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`                                                            // Pagination parameters (limit = batch size, offset = where to start)
	AlbumId       *string                `protobuf:"bytes,2,opt,name=album_id,json=albumId,proto3,oneof" json:"album_id,omitempty"`                                             // Filter by album ID
	Type          *MediaType             `protobuf:"varint,3,opt,name=type,proto3,enum=photos_ng.api.v1.grpc.MediaType,oneof" json:"type,omitempty"`                            // Filter by media type
	StartDate     *string                `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3,oneof" json:"start_date,omitempty"`                                       // Filter media captured on/after this date (YYYY-MM-DD)
	EndDate       *string                `protobuf:"bytes,5,opt,name=end_date,json=endDate,proto3,oneof" json:"end_date,omitempty"`                                             // Filter media captured on/before this date (YYYY-MM-DD)
	SortBy        *MediaSortBy           `protobuf:"varint,6,opt,name=sort_by,json=sortBy,proto3,enum=photos_ng.api.v1.grpc.MediaSortBy,oneof" json:"sort_by,omitempty"`        // Sort field (default: captured_at)
	SortOrder     *SortOrder             `protobuf:"varint,7,opt,name=sort_order,json=sortOrder,proto3,enum=photos_ng.api.v1.grpc.SortOrder,oneof" json:"sort_order,omitempty"` // Sort order (default: desc)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMediaRequest) Reset() {
	*x = ListMediaRequest{}
	mi := &file_media_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMediaRequest) ProtoMessage() {}

func (x *ListMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMediaRequest.ProtoReflect.Descriptor instead.
func (*ListMediaRequest) Descriptor() ([]byte, []int) {
	return file_media_proto_rawDescGZIP(), []int{1}
}

func (x *ListMediaRequest) GetPagination() *PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListMediaRequest) GetAlbumId() string {
	if x != nil && x.AlbumId != nil {
		return *x.AlbumId
	}
	return ""
}

func (x *ListMediaRequest) GetType() MediaType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return MediaType_MEDIA_TYPE_UNSPECIFIED
}

func (x *ListMediaRequest) GetStartDate() string {
	if x != nil && x.StartDate != nil {
		return *x.StartDate
	}
	return ""
}

func (x *ListMediaRequest) GetEndDate() string {
	if x != nil && x.EndDate != nil {
		return *x.EndDate
	}
	return ""
}

func (x *ListMediaRequest) GetSortBy() MediaSortBy {
	if x != nil && x.SortBy != nil {
		return *x.SortBy
	}
	return MediaSortBy_MEDIA_SORT_BY_UNSPECIFIED
}

func (x *ListMediaRequest) GetSortOrder() SortOrder {
	if x != nil && x.SortOrder != nil {
		return *x.SortOrder
	}
	return SortOrder_SORT_ORDER_UNSPECIFIED
}

// Response containing list of media
type ListMediaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Media         []*Media               `protobuf:"bytes,1,rep,name=media,proto3" json:"media,omitempty"`           // List of media items
	Pagination    *PaginationResponse    `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"` // Pagination metadata
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListMediaResponse) Reset() {
	*x = ListMediaResponse{}
	mi := &file_media_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMediaResponse) ProtoMessage() {}

func (x *ListMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_media_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMediaResponse.ProtoReflect.Descriptor instead.
func (*ListMediaResponse) Descriptor() ([]byte, []int) {
	return file_media_proto_rawDescGZIP(), []int{2}
}

func (x *ListMediaResponse) GetMedia() []*Media {
	if x != nil {
		return x.Media
	}
	return nil
}

func (x *ListMediaResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// Request to upload new media
type UploadMediaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`                          // Original filename
	AlbumId       string                 `protobuf:"bytes,2,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"`             // Target album ID
	FileContent   []byte                 `protobuf:"bytes,3,opt,name=file_content,json=fileContent,proto3" json:"file_content,omitempty"` // Binary file content
	ContentType   string                 `protobuf:"bytes,4,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"` // MIME type of the file
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadMediaRequest) Reset() {
	*x = UploadMediaRequest{}
	mi := &file_media_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadMediaRequest) ProtoMessage() {}

func (x *UploadMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadMediaRequest.ProtoReflect.Descriptor instead.
func (*UploadMediaRequest) Descriptor() ([]byte, []int) {
	return file_media_proto_rawDescGZIP(), []int{3}
}

func (x *UploadMediaRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *UploadMediaRequest) GetAlbumId() string {
	if x != nil {
		return x.AlbumId
	}
	return ""
}

func (x *UploadMediaRequest) GetFileContent() []byte {
	if x != nil {
		return x.FileContent
	}
	return nil
}

func (x *UploadMediaRequest) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

// Request to get a specific media item by ID
type GetMediaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Media ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMediaRequest) Reset() {
	*x = GetMediaRequest{}
	mi := &file_media_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMediaRequest) ProtoMessage() {}

func (x *GetMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMediaRequest.ProtoReflect.Descriptor instead.
func (*GetMediaRequest) Descriptor() ([]byte, []int) {
	return file_media_proto_rawDescGZIP(), []int{4}
}

func (x *GetMediaRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Request to update media metadata
type UpdateMediaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CapturedAt    *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=captured_at,json=capturedAt,proto3,oneof" json:"captured_at,omitempty"` // Updated capture date
	Exif          []*ExifHeader          `protobuf:"bytes,2,rep,name=exif,proto3" json:"exif,omitempty"`                                     // Updated EXIF data
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMediaRequest) Reset() {
	*x = UpdateMediaRequest{}
	mi := &file_media_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMediaRequest) ProtoMessage() {}

func (x *UpdateMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMediaRequest.ProtoReflect.Descriptor instead.
func (*UpdateMediaRequest) Descriptor() ([]byte, []int) {
	return file_media_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateMediaRequest) GetCapturedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CapturedAt
	}
	return nil
}

func (x *UpdateMediaRequest) GetExif() []*ExifHeader {
	if x != nil {
		return x.Exif
	}
	return nil
}

// Request to update a specific media item by ID
type UpdateMediaByIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`         // Media ID
	Update        *UpdateMediaRequest    `protobuf:"bytes,2,opt,name=update,proto3" json:"update,omitempty"` // Update data
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMediaByIdRequest) Reset() {
	*x = UpdateMediaByIdRequest{}
	mi := &file_media_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMediaByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMediaByIdRequest) ProtoMessage() {}

func (x *UpdateMediaByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMediaByIdRequest.ProtoReflect.Descriptor instead.
func (*UpdateMediaByIdRequest) Descriptor() ([]byte, []int) {
	return file_media_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateMediaByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateMediaByIdRequest) GetUpdate() *UpdateMediaRequest {
	if x != nil {
		return x.Update
	}
	return nil
}

// Request to delete a specific media item by ID
type DeleteMediaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Media ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMediaRequest) Reset() {
	*x = DeleteMediaRequest{}
	mi := &file_media_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMediaRequest) ProtoMessage() {}

func (x *DeleteMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMediaRequest.ProtoReflect.Descriptor instead.
func (*DeleteMediaRequest) Descriptor() ([]byte, []int) {
	return file_media_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteMediaRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Request to get media thumbnail
type GetMediaThumbnailRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Media ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMediaThumbnailRequest) Reset() {
	*x = GetMediaThumbnailRequest{}
	mi := &file_media_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMediaThumbnailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMediaThumbnailRequest) ProtoMessage() {}

func (x *GetMediaThumbnailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMediaThumbnailRequest.ProtoReflect.Descriptor instead.
func (*GetMediaThumbnailRequest) Descriptor() ([]byte, []int) {
	return file_media_proto_rawDescGZIP(), []int{8}
}

func (x *GetMediaThumbnailRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Request to get media content
type GetMediaContentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Media ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMediaContentRequest) Reset() {
	*x = GetMediaContentRequest{}
	mi := &file_media_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMediaContentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMediaContentRequest) ProtoMessage() {}

func (x *GetMediaContentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMediaContentRequest.ProtoReflect.Descriptor instead.
func (*GetMediaContentRequest) Descriptor() ([]byte, []int) {
	return file_media_proto_rawDescGZIP(), []int{9}
}

func (x *GetMediaContentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Response containing binary data (for thumbnails and content)
type BinaryDataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`                                  // Binary content
	ContentType   string                 `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"` // MIME type
	Filename      string                 `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`                          // Original filename (optional)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BinaryDataResponse) Reset() {
	*x = BinaryDataResponse{}
	mi := &file_media_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BinaryDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BinaryDataResponse) ProtoMessage() {}

func (x *BinaryDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_media_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BinaryDataResponse.ProtoReflect.Descriptor instead.
func (*BinaryDataResponse) Descriptor() ([]byte, []int) {
	return file_media_proto_rawDescGZIP(), []int{10}
}

func (x *BinaryDataResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *BinaryDataResponse) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *BinaryDataResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

// Chunk of binary data for streaming large files
type BinaryDataChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chunk         []byte                 `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`                                   // Chunk of binary data
	ContentType   string                 `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`    // MIME type (sent with first chunk)
	Filename      string                 `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`                             // Original filename (sent with first chunk)
	TotalSize     int64                  `protobuf:"varint,4,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`         // Total file size in bytes (sent with first chunk)
	ChunkIndex    int64                  `protobuf:"varint,5,opt,name=chunk_index,json=chunkIndex,proto3" json:"chunk_index,omitempty"`      // Index of this chunk (0-based)
	IsLastChunk   bool                   `protobuf:"varint,6,opt,name=is_last_chunk,json=isLastChunk,proto3" json:"is_last_chunk,omitempty"` // True if this is the last chunk
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BinaryDataChunk) Reset() {
	*x = BinaryDataChunk{}
	mi := &file_media_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BinaryDataChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BinaryDataChunk) ProtoMessage() {}

func (x *BinaryDataChunk) ProtoReflect() protoreflect.Message {
	mi := &file_media_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BinaryDataChunk.ProtoReflect.Descriptor instead.
func (*BinaryDataChunk) Descriptor() ([]byte, []int) {
	return file_media_proto_rawDescGZIP(), []int{11}
}

func (x *BinaryDataChunk) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

func (x *BinaryDataChunk) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *BinaryDataChunk) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *BinaryDataChunk) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *BinaryDataChunk) GetChunkIndex() int64 {
	if x != nil {
		return x.ChunkIndex
	}
	return 0
}

func (x *BinaryDataChunk) GetIsLastChunk() bool {
	if x != nil {
		return x.IsLastChunk
	}
	return false
}

var File_media_proto protoreflect.FileDescriptor

const file_media_proto_rawDesc = "" +
	"\n" +
	"\vmedia.proto\x12\x15photos_ng.api.v1.grpc\x1a\fcommon.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xf8\x01\n" +
	"\x05Media\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\balbum_id\x18\x02 \x01(\tR\aalbumId\x12;\n" +
	"\vcaptured_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"capturedAt\x124\n" +
	"\x04type\x18\x04 \x01(\x0e2 .photos_ng.api.v1.grpc.MediaTypeR\x04type\x12\x1a\n" +
	"\bfilename\x18\x05 \x01(\tR\bfilename\x125\n" +
	"\x04exif\x18\x06 \x03(\v2!.photos_ng.api.v1.grpc.ExifHeaderR\x04exif\"\xd0\x03\n" +
	"\x10ListMediaRequest\x12H\n" +
	"\n" +
	"pagination\x18\x01 \x01(\v2(.photos_ng.api.v1.grpc.PaginationRequestR\n" +
	"pagination\x12\x1e\n" +
	"\balbum_id\x18\x02 \x01(\tH\x00R\aalbumId\x88\x01\x01\x129\n" +
	"\x04type\x18\x03 \x01(\x0e2 .photos_ng.api.v1.grpc.MediaTypeH\x01R\x04type\x88\x01\x01\x12\"\n" +
	"\n" +
	"start_date\x18\x04 \x01(\tH\x02R\tstartDate\x88\x01\x01\x12\x1e\n" +
	"\bend_date\x18\x05 \x01(\tH\x03R\aendDate\x88\x01\x01\x12@\n" +
	"\asort_by\x18\x06 \x01(\x0e2\".photos_ng.api.v1.grpc.MediaSortByH\x04R\x06sortBy\x88\x01\x01\x12D\n" +
	"\n" +
	"sort_order\x18\a \x01(\x0e2 .photos_ng.api.v1.grpc.SortOrderH\x05R\tsortOrder\x88\x01\x01B\v\n" +
	"\t_album_idB\a\n" +
	"\x05_typeB\r\n" +
	"\v_start_dateB\v\n" +
	"\t_end_dateB\n" +
	"\n" +
	"\b_sort_byB\r\n" +
	"\v_sort_order\"\x92\x01\n" +
	"\x11ListMediaResponse\x122\n" +
	"\x05media\x18\x01 \x03(\v2\x1c.photos_ng.api.v1.grpc.MediaR\x05media\x12I\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2).photos_ng.api.v1.grpc.PaginationResponseR\n" +
	"pagination\"\x91\x01\n" +
	"\x12UploadMediaRequest\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x19\n" +
	"\balbum_id\x18\x02 \x01(\tR\aalbumId\x12!\n" +
	"\ffile_content\x18\x03 \x01(\fR\vfileContent\x12!\n" +
	"\fcontent_type\x18\x04 \x01(\tR\vcontentType\"!\n" +
	"\x0fGetMediaRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x9d\x01\n" +
	"\x12UpdateMediaRequest\x12@\n" +
	"\vcaptured_at\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampH\x00R\n" +
	"capturedAt\x88\x01\x01\x125\n" +
	"\x04exif\x18\x02 \x03(\v2!.photos_ng.api.v1.grpc.ExifHeaderR\x04exifB\x0e\n" +
	"\f_captured_at\"k\n" +
	"\x16UpdateMediaByIdRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12A\n" +
	"\x06update\x18\x02 \x01(\v2).photos_ng.api.v1.grpc.UpdateMediaRequestR\x06update\"$\n" +
	"\x12DeleteMediaRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"*\n" +
	"\x18GetMediaThumbnailRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"(\n" +
	"\x16GetMediaContentRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"g\n" +
	"\x12BinaryDataResponse\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12!\n" +
	"\fcontent_type\x18\x02 \x01(\tR\vcontentType\x12\x1a\n" +
	"\bfilename\x18\x03 \x01(\tR\bfilename\"\xca\x01\n" +
	"\x0fBinaryDataChunk\x12\x14\n" +
	"\x05chunk\x18\x01 \x01(\fR\x05chunk\x12!\n" +
	"\fcontent_type\x18\x02 \x01(\tR\vcontentType\x12\x1a\n" +
	"\bfilename\x18\x03 \x01(\tR\bfilename\x12\x1d\n" +
	"\n" +
	"total_size\x18\x04 \x01(\x03R\ttotalSize\x12\x1f\n" +
	"\vchunk_index\x18\x05 \x01(\x03R\n" +
	"chunkIndex\x12\"\n" +
	"\ris_last_chunk\x18\x06 \x01(\bR\visLastChunk2\x99\x05\n" +
	"\fMediaService\x12T\n" +
	"\tListMedia\x12'.photos_ng.api.v1.grpc.ListMediaRequest\x1a\x1c.photos_ng.api.v1.grpc.Media0\x01\x12V\n" +
	"\vUploadMedia\x12).photos_ng.api.v1.grpc.UploadMediaRequest\x1a\x1c.photos_ng.api.v1.grpc.Media\x12P\n" +
	"\bGetMedia\x12&.photos_ng.api.v1.grpc.GetMediaRequest\x1a\x1c.photos_ng.api.v1.grpc.Media\x12Z\n" +
	"\vUpdateMedia\x12-.photos_ng.api.v1.grpc.UpdateMediaByIdRequest\x1a\x1c.photos_ng.api.v1.grpc.Media\x12P\n" +
	"\vDeleteMedia\x12).photos_ng.api.v1.grpc.DeleteMediaRequest\x1a\x16.google.protobuf.Empty\x12o\n" +
	"\x11GetMediaThumbnail\x12/.photos_ng.api.v1.grpc.GetMediaThumbnailRequest\x1a).photos_ng.api.v1.grpc.BinaryDataResponse\x12j\n" +
	"\x0fGetMediaContent\x12-.photos_ng.api.v1.grpc.GetMediaContentRequest\x1a&.photos_ng.api.v1.grpc.BinaryDataChunk0\x01B\xcd\x01\n" +
	"\x19com.photos_ng.api.v1.grpcB\n" +
	"MediaProtoP\x01Z0git.tls.tupangiu.ro/cosmin/photos-ng/api/v1/grpc\xa2\x02\x04PAVG\xaa\x02\x14PhotosNg.Api.V1.Grpc\xca\x02\x14PhotosNg\\Api\\V1\\Grpc\xe2\x02 PhotosNg\\Api\\V1\\Grpc\\GPBMetadata\xea\x02\x17PhotosNg::Api::V1::Grpcb\x06proto3"

var (
	file_media_proto_rawDescOnce sync.Once
	file_media_proto_rawDescData []byte
)

func file_media_proto_rawDescGZIP() []byte {
	file_media_proto_rawDescOnce.Do(func() {
		file_media_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_media_proto_rawDesc), len(file_media_proto_rawDesc)))
	})
	return file_media_proto_rawDescData
}

var file_media_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_media_proto_goTypes = []any{
	(*Media)(nil),                    // 0: photos_ng.api.v1.grpc.Media
	(*ListMediaRequest)(nil),         // 1: photos_ng.api.v1.grpc.ListMediaRequest
	(*ListMediaResponse)(nil),        // 2: photos_ng.api.v1.grpc.ListMediaResponse
	(*UploadMediaRequest)(nil),       // 3: photos_ng.api.v1.grpc.UploadMediaRequest
	(*GetMediaRequest)(nil),          // 4: photos_ng.api.v1.grpc.GetMediaRequest
	(*UpdateMediaRequest)(nil),       // 5: photos_ng.api.v1.grpc.UpdateMediaRequest
	(*UpdateMediaByIdRequest)(nil),   // 6: photos_ng.api.v1.grpc.UpdateMediaByIdRequest
	(*DeleteMediaRequest)(nil),       // 7: photos_ng.api.v1.grpc.DeleteMediaRequest
	(*GetMediaThumbnailRequest)(nil), // 8: photos_ng.api.v1.grpc.GetMediaThumbnailRequest
	(*GetMediaContentRequest)(nil),   // 9: photos_ng.api.v1.grpc.GetMediaContentRequest
	(*BinaryDataResponse)(nil),       // 10: photos_ng.api.v1.grpc.BinaryDataResponse
	(*BinaryDataChunk)(nil),          // 11: photos_ng.api.v1.grpc.BinaryDataChunk
	(*timestamppb.Timestamp)(nil),    // 12: google.protobuf.Timestamp
	(MediaType)(0),                   // 13: photos_ng.api.v1.grpc.MediaType
	(*ExifHeader)(nil),               // 14: photos_ng.api.v1.grpc.ExifHeader
	(*PaginationRequest)(nil),        // 15: photos_ng.api.v1.grpc.PaginationRequest
	(MediaSortBy)(0),                 // 16: photos_ng.api.v1.grpc.MediaSortBy
	(SortOrder)(0),                   // 17: photos_ng.api.v1.grpc.SortOrder
	(*PaginationResponse)(nil),       // 18: photos_ng.api.v1.grpc.PaginationResponse
	(*emptypb.Empty)(nil),            // 19: google.protobuf.Empty
}
var file_media_proto_depIdxs = []int32{
	12, // 0: photos_ng.api.v1.grpc.Media.captured_at:type_name -> google.protobuf.Timestamp
	13, // 1: photos_ng.api.v1.grpc.Media.type:type_name -> photos_ng.api.v1.grpc.MediaType
	14, // 2: photos_ng.api.v1.grpc.Media.exif:type_name -> photos_ng.api.v1.grpc.ExifHeader
	15, // 3: photos_ng.api.v1.grpc.ListMediaRequest.pagination:type_name -> photos_ng.api.v1.grpc.PaginationRequest
	13, // 4: photos_ng.api.v1.grpc.ListMediaRequest.type:type_name -> photos_ng.api.v1.grpc.MediaType
	16, // 5: photos_ng.api.v1.grpc.ListMediaRequest.sort_by:type_name -> photos_ng.api.v1.grpc.MediaSortBy
	17, // 6: photos_ng.api.v1.grpc.ListMediaRequest.sort_order:type_name -> photos_ng.api.v1.grpc.SortOrder
	0,  // 7: photos_ng.api.v1.grpc.ListMediaResponse.media:type_name -> photos_ng.api.v1.grpc.Media
	18, // 8: photos_ng.api.v1.grpc.ListMediaResponse.pagination:type_name -> photos_ng.api.v1.grpc.PaginationResponse
	12, // 9: photos_ng.api.v1.grpc.UpdateMediaRequest.captured_at:type_name -> google.protobuf.Timestamp
	14, // 10: photos_ng.api.v1.grpc.UpdateMediaRequest.exif:type_name -> photos_ng.api.v1.grpc.ExifHeader
	5,  // 11: photos_ng.api.v1.grpc.UpdateMediaByIdRequest.update:type_name -> photos_ng.api.v1.grpc.UpdateMediaRequest
	1,  // 12: photos_ng.api.v1.grpc.MediaService.ListMedia:input_type -> photos_ng.api.v1.grpc.ListMediaRequest
	3,  // 13: photos_ng.api.v1.grpc.MediaService.UploadMedia:input_type -> photos_ng.api.v1.grpc.UploadMediaRequest
	4,  // 14: photos_ng.api.v1.grpc.MediaService.GetMedia:input_type -> photos_ng.api.v1.grpc.GetMediaRequest
	6,  // 15: photos_ng.api.v1.grpc.MediaService.UpdateMedia:input_type -> photos_ng.api.v1.grpc.UpdateMediaByIdRequest
	7,  // 16: photos_ng.api.v1.grpc.MediaService.DeleteMedia:input_type -> photos_ng.api.v1.grpc.DeleteMediaRequest
	8,  // 17: photos_ng.api.v1.grpc.MediaService.GetMediaThumbnail:input_type -> photos_ng.api.v1.grpc.GetMediaThumbnailRequest
	9,  // 18: photos_ng.api.v1.grpc.MediaService.GetMediaContent:input_type -> photos_ng.api.v1.grpc.GetMediaContentRequest
	0,  // 19: photos_ng.api.v1.grpc.MediaService.ListMedia:output_type -> photos_ng.api.v1.grpc.Media
	0,  // 20: photos_ng.api.v1.grpc.MediaService.UploadMedia:output_type -> photos_ng.api.v1.grpc.Media
	0,  // 21: photos_ng.api.v1.grpc.MediaService.GetMedia:output_type -> photos_ng.api.v1.grpc.Media
	0,  // 22: photos_ng.api.v1.grpc.MediaService.UpdateMedia:output_type -> photos_ng.api.v1.grpc.Media
	19, // 23: photos_ng.api.v1.grpc.MediaService.DeleteMedia:output_type -> google.protobuf.Empty
	10, // 24: photos_ng.api.v1.grpc.MediaService.GetMediaThumbnail:output_type -> photos_ng.api.v1.grpc.BinaryDataResponse
	11, // 25: photos_ng.api.v1.grpc.MediaService.GetMediaContent:output_type -> photos_ng.api.v1.grpc.BinaryDataChunk
	19, // [19:26] is the sub-list for method output_type
	12, // [12:19] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_media_proto_init() }
func file_media_proto_init() {
	if File_media_proto != nil {
		return
	}
	file_common_proto_init()
	file_media_proto_msgTypes[1].OneofWrappers = []any{}
	file_media_proto_msgTypes[5].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_media_proto_rawDesc), len(file_media_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_media_proto_goTypes,
		DependencyIndexes: file_media_proto_depIdxs,
		MessageInfos:      file_media_proto_msgTypes,
	}.Build()
	File_media_proto = out.File
	file_media_proto_goTypes = nil
	file_media_proto_depIdxs = nil
}
